// Problem0012.cpp : Defines the entry point for the console application.

/*
Problem 12: Highly divisible triangular number

The sequence of triangle numbers is generated by adding the natural
numbers. So the 7th triangle number would be 1 + 2 + 3 + 4 + 5 + 6 + 7 = 28.
The first ten terms would be:

1, 3, 6, 10, 15, 21, 28, 36, 45, 55, ...

Let us list the factors of the first seven triangle numbers:

1: 1
3: 1,3
6: 1,2,3,6
10: 1,2,5,10
15: 1,3,5,15
21: 1,3,7,21
28: 1,2,4,7,14,28

We can see that 28 is the first triangle number to have over five divisors.

What is the value of the first triangle number to have over five hundred
divisors?

Answer: 76576500
*/

#include "ProjectEuler.h"

uint64_t problem12()
{
	uint64_t result{ 0 };
	std::vector<uint64_t> factors;
	uint64_t numberOfFactors = 0;
	uint64_t counter = 1;
	uint64_t maxFactors = 500;

	while (numberOfFactors < maxFactors) {
		result += counter;
		factors = getFactors(result);
		numberOfFactors = factors.size();
		counter++;
	}

	//std::cout << "The first tringle number with " << numberOfFactors
	//	<< " factors is " << result << std::endl;

    return result;
}
