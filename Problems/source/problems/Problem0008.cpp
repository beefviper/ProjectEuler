// Problem0008.cpp : Defines the entry point for the console application.

/*
Largest product in a series
Problem 8

The four adjacent digits in the 1000-digit number that have the greatest
product are 9 × 9 × 8 × 9 = 5832.

731671765313306249192251196744265747423553491949349698352031277450632 \
623957831801698480186947885184385861560789112949495459501737958331952 \
853208805511125406987471585238630507156932909632952274430435576689664 \
895044524452316173185640309871112172238311362229893423380308135336276 \
614282806444486645238749303589072962904915604407723907138105158593079 \
608667017242712188399879790879227492190169972088809377665727333001053 \
367881220235421809751254540594752243525849077116705560136048395864467 \
063244157221553975369781797784617406495514929086256932197846862248283 \
972241375657056057490261407972968652414535100474821663704844031998900 \
088952434506585412275886668811642717147992444292823086346567481391912 \
316282458617866458359124566529476545682848912883142607690042242190226 \
710556263211111093705442175069416589604080719840385096245544436298123 \
098787992724428490918884580156166097919133875499200524063689912560717 \
606058861164671094050775410022569831552000559357297257163626956188267 \
0428252483600823257530420752963450

Find the thirteen adjacent digits in the 1000-digit number that have the
greatest product. What is the value of this product?

Answer: 23514624000
*/

#include "ProjectEuler.h"

uint64_t problem8()
{
	uint64_t result{ 0 };
	int run = 13;
	std::string number = "7316717653133062491922511967442657474235534919493496983520312774506326239578318016984801869478851843858615607891129494954595017379583319528532088055111254069874715852386305071569329096329522744304355766896648950445244523161731856403098711121722383113622298934233803081353362766142828064444866452387493035890729629049156044077239071381051585930796086670172427121883998797908792274921901699720888093776657273330010533678812202354218097512545405947522435258490771167055601360483958644670632441572215539753697817977846174064955149290862569321978468622482839722413756570560574902614079729686524145351004748216637048440319989000889524345065854122758866688116427171479924442928230863465674813919123162824586178664583591245665294765456828489128831426076900422421902267105562632111110937054421750694165896040807198403850962455444362981230987879927244284909188845801561660979191338754992005240636899125607176060588611646710940507754100225698315520005593572972571636269561882670428252483600823257530420752963450";

	//std::cout << "The length of the number is " << number.length()
	//	<< "." << std::endl;

	for (int i = 0; i < 1000-run+1; i++) {
		std::string test = "";
		test = number.substr(i, run);
		uint64_t total = 1;
				
		for (int j = 0; j < run; j++) {
			std::string s = test.substr(j, 1);
			const char *c = s.c_str();
			int temp = atoi(c);
			if (j == run - 1) {
				//std::cout << temp << " = ";
			}
			else {
				//std::cout << temp << " * ";
			}
			total = total * temp;
		}

		//std::cout << total << std::endl;

		if (total > result) {
			result = total;
		}
	}

	//std::cout << "The greatest product of 4 consecutive digits is "
	//	<< result << "." << std::endl;

    return result;
}
